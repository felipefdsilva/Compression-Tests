def cloud_client(ip, primary_key, local_certificate):
	import requests
	import sys
	import json
	import zlib
	#import simplejson
	#from signal import signal, SIGPIPE, SIG_DFL
	#signal(SIGPIPE, SIG_DFL)
	j = 0
	#while (j < 5):
	payload = {
        "stop_id": 1,
        "batches": [{
                "node_id": 1,
                "type": "data",
                "received": "25081617154300",
                "header": "datetime,lat,lng,light,temperature,humidity,rain",
                "load": ["25081616493200,-22.865690,-43.223827,999,35.00,31.00,781",
                        "25081616493300,-22.865690,-43.223831,999,35.00,31.00,777",
                        "25081616493400,-22.865690,-43.223831,999,35.00,31.00,775",
                        "25081616493500,-22.865690,-43.223831,998,35.00,31.00,779",
                        "25081616493600,-22.865690,-43.223831,999,35.00,31.00,773",
                        "25081616493700,-22.865690,-43.223831,999,35.00,31.00,784",
                        "25081616493800,-22.865692,-43.223831,999,35.00,31.00,782",
                        "25081616493900,-22.865692,-43.223835,999,35.00,31.00,787",
                        "25081616494000,-22.865692,-43.223835,999,35.00,31.00,779",
                        "25081616494100,-22.865694,-43.223831,999,35.00,31.00,778",
                        "25081616494200,-22.865694,-43.223831,998,35.00,31.00,785",
                        "25081616494300,-22.865694,-43.223835,999,35.00,30.00,780",
                        "25081616494400,-22.865694,-43.223835,999,35.00,30.00,780"
                ]
        }, {
                "node_id": 2,
                "type": "data",
                "received": "25081617154300",
                "header": "datetime,lat,lng,light,temperature,humidity,rain",
                "load": ["25081616493200,-22.865690,-43.223827,999,35.00,31.00,781",
                        "25081616493300,-22.865690,-43.223831,999,35.00,31.00,777",
                        "25081616493400,-22.865690,-43.223831,999,35.00,31.00,775",
                        "25081616493500,-22.865690,-43.223831,998,35.00,31.00,779",
                        "25081616493600,-22.865690,-43.223831,999,35.00,31.00,773",
                        "25081616493700,-22.865690,-43.223831,999,35.00,31.00,784",
                        "25081616493800,-22.865692,-43.223831,999,35.00,31.00,782",
                        "25081616493900,-22.865692,-43.223835,999,35.00,31.00,787",
                        "25081616494000,-22.865692,-43.223835,999,35.00,31.00,779",
                        "25081616494100,-22.865694,-43.223831,999,35.00,31.00,778",
                        "25081616494200,-22.865694,-43.223831,998,35.00,31.00,785",
                        "25081616494300,-22.865694,-43.223835,999,35.00,30.00,780",
                        "25081616494400,-22.865694,-43.223835,999,35.00,30.00,780"
                ]
        }, {
                "node_id": 3,
                "type": "data",
                "received": "25081617154300",
                "header": "datetime,lat,lng,light,temperature,humidity,rain",
                "load": ["25081616493200,-22.865690,-43.223827,999,35.00,31.00,781",
                        "25081616493300,-22.865690,-43.223831,999,35.00,31.00,777",
                        "25081616493400,-22.865690,-43.223831,999,35.00,31.00,775",
                        "25081616493500,-22.865690,-43.223831,998,35.00,31.00,779",
                        "25081616493600,-22.865690,-43.223831,999,35.00,31.00,773",
                        "25081616493700,-22.865690,-43.223831,999,35.00,31.00,784",
                        "25081616493800,-22.865692,-43.223831,999,35.00,31.00,782",
                        "25081616493900,-22.865692,-43.223835,999,35.00,31.00,787",
                        "25081616494000,-22.865692,-43.223835,999,35.00,31.00,779",
                        "25081616494100,-22.865694,-43.223831,999,35.00,31.00,778",
                        "25081616494200,-22.865694,-43.223831,998,35.00,31.00,785",
                        "25081616494300,-22.865694,-43.223835,999,35.00,30.00,780",
                        "25081616494400,-22.865694,-43.223835,999,35.00,30.00,780"
                ]
        }]

}
	payload = zlib.compress(json.dumps(payload).encode('utf-8').encode('zlib_codec'), 9)
	#print 'MENSAGEM COMPRIMIDA'
	#print payload
	headers = {'Content-Encoding': 'text/plain','Content-Length': str(len(payload))}
	r = requests.post('https://%s/' %ip, data=payload,headers=headers, cert=(local_certificate, primary_key))
	#print r.text
	#print r.json
	print r

if __name__ == "__main__":
	ip = 'sensingbus.gta.ufrj.br/zip_measurements_batch_sec'
	primary_key = '/home/felipe/ssl/raspberry3.key.pem'
	local_certificate ='/home/felipe/ssl/raspberry3.cert.pem'
	cloud_client(ip, primary_key, local_certificate)
